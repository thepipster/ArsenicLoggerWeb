{
  "name": "arsenic-logger",
  "version": "0.0.6",
  "description": "Simple, easy to read log statements with stack trace in Node.js",
  "main": "example.js",
  "dependencies": {
    "callsite": "1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ArsenicSoup/arsenic-logger.git"
  },
  "keywords": [
    "logger",
    "stack",
    "trace",
    "color"
  ],
  "author": {
    "name": "Mike Pritchard",
    "url": "mike@arsenicsoup.com"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "# node-logger\n\n## Summary\n\nSimple, easy to read log statements with stack trace in Node.js. There are a few other great loggers out there for Node.js, the inspiration to create our own\nwas mainly driven by the need for both a stack trace and a colorized and easy to read output.\n\n## Coming Soon\n\nOutput to a remote logging service hosted by arsenic soup\n\n## Installation\n\n```\nnpm install arsenic-logger\n```\n\n```js\nLogger = require('arsenic-logger');\n```\n## Screen Shot\n\n![](https://github.com/ArsenicSoup/arsenic-logger/raw/master/logger_screenshot.png)\n\n\n## Usage\n\nThere are 5 levels of logging\n\n```js \nlog, debug, info, warn, error, fatal\n```\n\nHere is an example of how to use the logger.\n\n```js\n\nLogger = require('./Logger.js');\n\nLogger.setLevel('debug');\n\nLogger.debug(\"debug test\");\nLogger.info(\"info test\");\nLogger.warn(\"info test\");\nLogger.error(\"errortest\");\n\nvar someObject = new Object();\nsomeObject.name = 'testing';\nsomeObject.data = [5,6,7,8,9];\nsomeObject.date = new Date();\n\nLogger.debug(\"This is an object... \", someObject);\n\nfunction somefunc(){\n\tLogger.debug(\"testing inside a function\");\t\n}\n\nvar someclass = {\n\ttest:function(){\n\t\tLogger.debug(\"Testing inside a class\");\n\t}\n}\n\nsomefunc();\nsomeclass.test();\n\nLogger.info(someObject);\n\n// A fatal call, that will call process.exit\nLogger.fatal(\"fatal test\");\n\n// Feed uncaught exceptions to the Logger\nLogger.catchExceptions();\n\t\nfunction badFunc(){\n\tthrow \"This is an exception!\";\t\n}\n\nbadFunc();\n\nLogger.debug(variableThatDoesntExist);\n\n```\n\n## Requirements\n\nREquires the excellent callsite module (https://github.com/visionmedia/callsite)\n\nnpm install callsite\n\nAnd also the Path module (http://nodejs.org/api/path.html)\n\nnpm install path\n\n## Advanced\n\nFor a more full featured logger, check out [tracer](https://github.com/baryon/tracer).\n\n## License \n\n(The MIT License)\n\nCopyright (C) 2012 by Ad Astra Systems, LLC;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "bugs": {
    "url": "https://github.com/ArsenicSoup/arsenic-logger/issues"
  },
  "_id": "arsenic-logger@0.0.6",
  "_from": "arsenic-logger@"
}
